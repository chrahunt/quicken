trigger:
- master

jobs:

- job: Pipeline
  strategy:
    matrix:
      linux:
        python.version: '3.7'
        imageName: 'ubuntu-16.04'
      windows:
        python.version: '3.7'
        imageName: 'vs2017-win2016'
    maxParallel: 4

  pool:
    vmImage: $(imageName)

  steps:
  - task: UsePythonVersion@0
    inputs:
      versionSpec: '$(python.version)'
      architecture: 'x64'

  - script: |
      pip install poetry
      poetry install
    displayName: 'Install dependencies'

  - script: 'poetry run pytest -s -ra --junitxml=junit/test-results.xml tests'
    displayName: Run tests

  - task: PublishTestResults@2
    inputs:
      testResultsFiles: '**/test-results.xml'
      testRunTitle: 'Python $(python.version)'
    condition: succeededOrFailed()
    displayName: Publish test results

    # In lieu of getting logs as attachments on the test summary, we
    # publish as artifacts.
  - task: PublishPipelineArtifact@0
    inputs:
      artifactName: test_logs
      targetPath: logs/
    condition: succeededOrFailed()
    displayName: Publish logs

  - script: poetry build
    displayName: Build
  
  - task: PublishPipelineArtifact@0
    inputs:
      artifactName: artifacts
      targetPath: dist/
    displayName: Publish artifacts
